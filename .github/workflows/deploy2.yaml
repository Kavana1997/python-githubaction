name: Deploy to EKS
on:
  push:
    branches: [ main ]
  workflow_dispatch:
env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: 651706752271.dkr.ecr.ap-south-1.amazonaws.com
  EKS_CLUSTER_NAME: my-eks-cluster
  APP_NAME: python-app
  NAMESPACE: default
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REPOSITORY/$APP_NAME:$IMAGE_TAG .
        docker push $ECR_REPOSITORY/$APP_NAME:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REPOSITORY/$APP_NAME:$IMAGE_TAG"
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Create ECR pull secret
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | kubectl create secret docker-registry ecr-secret \
          --docker-server=${{ env.ECR_REPOSITORY }} \
          --docker-username=AWS \
          --docker-password=$(aws ecr get-login-password --region ${{ env.AWS_REGION }}) \
          --namespace=${{ env.NAMESPACE }} \
          --dry-run=client -o yaml | kubectl apply -f -
    - name: Deploy to EKS
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl get pods
        kubectl get svc






